#!/usr/bin/expect -f

send_user -- "----> Attempting to connect to: 5C:BA:37:FE:E0:03\n\n"

set timeout -1

spawn bluetoothctl
send "pairable on\n"
send "agent on\n"

send "default-agent\n"

send "paired-devices\n"
expect "Device 5C:BA:37:FE:E0:03" {
  set paired True
  send_user "\n----> Already paired\n"
}
set timeout -1

if { $paired == False } {
  send_user "\n----> Attempting to pair\n"

  expect -re {(?:^|\r|\n).{0,8}\[bluetooth\].{0,8}# }
  send "scan on\n"
  expect "Device 5C:BA:37:FE:E0:03"
  expect -re {(?:^|\r|\n).{0,8}\[bluetooth\].{0,8}# }
  send "scan off\n"

  expect -re {(?:^|\r|\n).{0,8}\[bluetooth\].{0,8}# }
  send "trust 5C:BA:37:FE:E0:03\n"
  expect "trust succeeded"

  # some devices take a bit before they are pairable
  sleep 2

  expect -re {(?:^|\r|\n).{0,8}\[bluetooth\].{0,8}# }
  send "pair 5C:BA:37:FE:E0:03\n"
  expect "Pairing successful"
  send_user "\n----> Pairing succesful\n"
}

send_user "\n----> Attempting to connect\n"
expect -re {(?:^|\r|\n).{0,8}\[bluetooth\].{0,8}# }
send "connect 5C:BA:37:FE:E0:03\n"
expect "Connection successful"
expect -re {(?:^|\r|\n).{0,8}\[[^\]]+\].{0,8}# }
send "exit\n"

send_user "\n----> Connection successful\n"

}
